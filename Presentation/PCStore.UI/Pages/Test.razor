@page "/apitest"
@inject HttpClient http

<h3>Login</h3>


<h1>Products</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th >Product Price</th>
                <th>Product Stock</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.ProductName</td>
                    <td>@product.ProductPrice</td>
                    <td>@product.ProductStock</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}


@code {

    List<GetProductsDTO> products = new List<GetProductsDTO>();
    string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            products = await http.GetFromJsonAsync<List<GetProductsDTO>>("api/product");
        }
        catch (HttpRequestException ex)
        {
            errorMessage = $"Error fetching products: {ex.Message}";
            Console.Error.WriteLine(errorMessage);
        }
        catch (Exception ex)
        {
            errorMessage = $"Unexpected error: {ex.Message}";
            Console.Error.WriteLine(errorMessage);
        }
    }
}
