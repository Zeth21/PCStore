@page "/resetpassword"
@inject NavigationManager Navigation
@inject HttpClient Http
@inject PCStore.UI.Services.AuthService authService


<h3 class="resetpwd-title">Şifre Yenileme</h3>

@if (!string.IsNullOrEmpty(Message))
{
    <p class="resetpwd-message @(IsSuccess ? "resetpwd-success" : "resetpwd-error")">@Message</p>
}

<div class="resetpwd-form-group">
    <label class="resetpwd-label">Yeni Şifre:</label>
    <input type="password" class="resetpwd-input" @bind="NewPassword" />
</div>

<div class="resetpwd-form-group">
    <label class="resetpwd-label">Yeni Şifre (Tekrar):</label>
    <input type="password" class="resetpwd-input" @bind="ConfirmPassword" />
</div>

<button class="resetpwd-button" @onclick="HandleResetPassword">Şifreyi Güncelle</button>

@code {
    private string? NewPassword;
    private string? ConfirmPassword;
    private string? UserId;
    private string? Token;
    private string? Message;
    private bool IsSuccess = false;

    protected override async Task OnInitializedAsync()
    {
        await DummyFunction();
        ParseQueryParams();
    }

    private async Task DummyFunction()
    {
        await Task.CompletedTask;
    }

    private void ParseQueryParams()
    {
        var uri = new Uri(Navigation.Uri);
        var query = uri.Query.TrimStart('?');

        var parameters = query.Split('&', StringSplitOptions.RemoveEmptyEntries)
                              .Select(p => p.Split('=', 2))
                              .Where(p => p.Length == 2)
                              .ToDictionary(p => p[0], p => Uri.UnescapeDataString(p[1]));

        parameters.TryGetValue("userId", out var userId);
        parameters.TryGetValue("token", out var token);

        UserId = userId;
        Token = token;
    }

    private async Task HandleResetPassword()
    {
        if (string.IsNullOrWhiteSpace(NewPassword) || string.IsNullOrWhiteSpace(ConfirmPassword))
        {
            Message = "Lütfen şifre alanlarını doldurun.";
            IsSuccess = false;
            return;
        }

        if (NewPassword != ConfirmPassword)
        {
            Message = "Şifreler uyuşmuyor.";
            IsSuccess = false;
            return;
        }

        var payload = new
        {
            UserId,
            Token,
            NewPassword
        };

        var response = await authService.ResetPassword(userId:UserId!,token:Token!,newPassword:NewPassword);
        if (response)
        {
            Message = "Şifre başarıyla güncellendi. Giriş sayfasına yönlendiriliyor...";
            IsSuccess = true;
            await Task.Delay(3000);
            Navigation.NavigateTo("/login");
        }
        else
        {
            Message = "Şifre güncellenemedi. Link süresi dolmuş olabilir.";
            IsSuccess = false;
        }
    }
}

<style>
    .resetpwd-title {
        text-align: center;
        margin-bottom: 20px;
        color: #333;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .resetpwd-message {
        text-align: center;
        font-weight: 600;
        margin-bottom: 15px;
        font-size: 1rem;
    }

    .resetpwd-success {
        color: green;
    }

    .resetpwd-error {
        color: red;
    }

    .resetpwd-form-group {
        max-width: 350px;
        margin: 0 auto 20px auto;
    }

    .resetpwd-label {
        display: block;
        margin-bottom: 6px;
        font-weight: 600;
        color: #444;
    }

    .resetpwd-input {
        width: 100%;
        padding: 10px 12px;
        border: 1.5px solid #ccc;
        border-radius: 6px;
        font-size: 1rem;
        transition: border-color 0.3s ease;
        box-sizing: border-box;
    }

        .resetpwd-input:focus {
            outline: none;
            border-color: #0078d7; /* Microsoft mavisi */
            box-shadow: 0 0 5px rgba(0, 120, 215, 0.5);
        }

    .resetpwd-button {
        display: block;
        margin: 0 auto;
        background-color: #0078d7;
        color: white;
        border: none;
        padding: 12px 30px;
        font-size: 1.1rem;
        border-radius: 6px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        min-width: 150px;
    }

        .resetpwd-button:hover {
            background-color: #005a9e;
        }

        .resetpwd-button:disabled {
            background-color: #999;
            cursor: not-allowed;
        }
</style>
